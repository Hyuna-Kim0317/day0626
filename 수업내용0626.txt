ctl+n project 생성

package 만들기
com.sp.app0626.animal

class 만들기

15. 상속 문제
8
1) 맞다
2) 틀리다.. 상속
	부모꺼 물려받는 것
	is a 관계	(자료형변환이 가능하다)
3) 맞다
4) 맞다
5) 맞다
6) 아니다. ( 객체 자료형은 데이터의 손실과 관계 없다.)

9.
1) 맞다
2) 맞다
3) 맞다 ** 상속의 개념 ** 중요 **
결국 객체지향 언어에서 상속이 갖는 의미는 크게 2가지로 관점으로 볼 수 있는데, 첫째는 기존 클래스의
     재사용성을 높여주는 것이고, 둘째는 서로 같은 자료형으로 묶을 수 있는 방법도 제공해 준다는 것이다.
4) 맞다
5)아니다. (lang 에 들어 있기 때문이고, lang은 기본으로 import 가 되어 잇다.)


javase 11 api document 검색

수평선 기준 위에가 상속 관계
--------------------------------------------
아래는 메서드 프로퍼티

========================================
10.
1) 아니다. 인수가 있는 생성자를 호출했으므로..
2) 아니다.
3) 아니다... default 로 public Duck(){super()} => 그런데, 부모한테는 인수 있는 생성자만 있다.
4) 맞다
5) 맞다// 애매하니까 문제 뺄게요..
6) 맞다

11.
1) 맞다
2) 아니다. 자료형은 Duck// duck 형이다. // 직접 주소값을 찍어보면 알 수 있다.
3) 아니다. 크기를 말하면 안된다. 객체간 형 변환을 크기로 말하면 안됨.. 범위의 문제이다.
4) 아니다. // 자동 형 변환이 발생하지 않고, Bird c = b; Duck c = (Bird)b 으로 바꾸어야 함. 
5) 아니다. // 새만 올라가지 오리는 올라가지 않음
6) 아니다 // 문법 상은 문제가 없는데, 참조 범위의 문제이다.
7) 아니다. // 지금 오리 인스턴스가 메모리에 올라가지 않았기 때문에.. 형변환을 할 수가 없다..
8) 맞다	// 항상 자식을 중심으로.. 
9) 맞다 	//오리는 올라간 적이 없다. bird 만 올라갔다

12.

13.
1) 아니다	//소스코드가 아니라 인스턴스로 말해야 한다.
2) 맞다
3) 맞다
4) 맞다
5) 맞다
6) 아니다	// 참조 범위가 좁아지는 것 뿐이다.
7) 맞다

14.
1) 아니다
2) 아니다
3) 맞다	
4) 맞다

15. 
1) 아니다.	
2) 아니다. 난 식물
3) 아니다. flower plant 둘 다 올라간다.
4. 아니다. 난 식물
5. 맞다
6. 맞다
7. 맞다



상속
encapsulation
추상화 : 복잡한 것을 간략화 :: 앞으로 배울 예정
15번의 E 와 같은 현상 : 하나의 객체가 여러가지 모습을 띈다. : 다형성
부모의 자료형으로 업그레이드(오버라이드)된 자식의 메서드를 호출한 것 : 다형성(polymorphism)

18.
1) 아니다.
2) 아니다. 참새가 날아요
3) 맞다
4) 맞다.. duck 이 올라간 적이 없다. ****다시 ********
5)맞다
6)맞다
